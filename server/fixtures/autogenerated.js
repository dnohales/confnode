var AutogeneratedFixtureManager = {
    generateTags: function() {
        var tagsSets = [
            ['meteor', 'nodejs', 'mongodb', 'npm'],
            ['symfony', 'php', 'doctrine', 'twig'],
            ['gaming', 'unity', 'game-engines', 'mongodb'],
            ['economy']
        ];

        var set = Fake.fromArray(tagsSets);
        var tags = [];
        var matchDegrader = 0;

        for (var i in set) {
            var matchArray = [true];
            for (var j = 0; j < matchDegrader; j++) {
                matchArray.push(false);
            }
            if (Fake.fromArray(matchArray)) {
                tags.push(set[i]);
            }
            matchDegrader++;
        }

        return tags;
    },

    generateAvailability: function() {
        var availability = [];

        for (var day = 0; day < 7; day++) {
            var dayRow = [];
            for (hour = 0; hour < 24; hour++) {
                dayRow.push(Fake.fromArray([true, false]));
            }
            availability.push(dayRow);
        }

        return availability;
    },

    run: function() {
        var users = {};

        users.admin = Accounts.createUser({
            username: 'admin',
            email: 'admin@confnode.com',
            password: '1234',
            profile: {
                fullname: 'Lisandro Nohappolis',
                company: 'conf.node inc.',
                location: 'Argentina',
                availability: FixtureManager.generateAvailability(),
                timezone: 'America/Argentina/Buenos_Aires'
            }
        });

        for (var i = 0; i < 200; i++) {
            var fakeUser = Fake.user();
            fakeUser.username = fakeUser.fullname.toLowerCase().replace(' ', '');

            Accounts.createUser({
                username: fakeUser.username,
                email: fakeUser.email,
                password: '1234',
                profile: {
                    fullname: fakeUser.fullname,
                    company: Fake.word(),
                    location: Fake.word(),
                    availability: FixtureManager.generateAvailability(),
                    timezone: 'America/Argentina/Buenos_Aires'
                }
            });
        }

        _.each(Meteor.users.find().fetch(), function(user) {
            roomsCount = Fake.fromArray([
                0,
                0,
                0,
                0,
                _.random(1, 5),
                0,
                0,
                0,
                0,
                _.random(6, 10),
                0,
                0,
                0,
                0
            ]);

            for (var j = 0; j < roomsCount; j++) {
                var date = new Date();
                date.setDate(date.getDate() - _.random(1, 180));

                roomId = Rooms.insert({
                    creatorId: user._id,
                    creatorEmail: user.emails[0].address,
                    creatorName: user.username,
                    submittedTime: date,

                    name: Fake.sentence(3).replace('.', ''),
                    description: Fake.sentence(20),
                    tags: FixtureManager.generateTags(),
                    guests: [],
                    listed: true,
                    public: true,
                    scheduled: false,
                    scheduledTime: null,
                    chat: true
                });

                var users = Meteor.users.find().fetch();
                for (var k in users) {
                    var u = users[k];
                    if (u._id !== user._id) {
                        if (_.random(0, 1) === 1) {
                            Meteor.users.helpers.addVisitedRoom(u._id, roomId);
                            if (Fake.fromArray([0, 0, 1]) === 1) {
                                Rooms.helpers.addFeeling({
                                    roomId: roomId,
                                    feeling: {
                                        rating: Fake.fromArray([0, 1, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5]),
                                        comment: Fake.sentence(15),
                                        dateRate: new Date().setDate(date.getDate() - _.random(1, 180))
                                    }
                                }, u._id);
                            }
                        }
                    }
                }
            }
        });
    }
};